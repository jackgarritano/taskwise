import * as chrono from 'chrono-node';
export {parsedDate}

const parsedDate = function(){
    let obj = {
        'dateArr': []
    };

    obj['compare'] = function(parsedObj){
        let add = this.dateArr.length < parsedObj.length; //new issue: if list length stays same (eg june 2 -> june 25, this can't handle that b/c it needs a delete and an insert. 2nd bool for both?)
        let minIncrement = Math.min(this.dateArr.length, parsedObj.length);
    
        for(let i=0; i<minIncrement; i++){
            if(this.dateArr[i].date !== `${parsedObj[i].start.get('month')}/${parsedObj[i].start.get('day')}/${parsedObj[i].start.get('year')}`){
                console.log('inside for loop, reqed at index: ' + i + '. add is: ' + add);
                return {
                    add,
                    index: i,
                };
            }
        }
    
        if(parsedObj.length < this.dateArr.length){
            console.log('requested delete at :' + minIncrement);
            return {
                add: false,
                index: minIncrement,
            };
        }
        else if(parsedObj.length > this.dateArr.length){
            console.log('requested insert at :' + minIncrement);
            return {
                add: true,
                index: minIncrement,
            };
        }
        else{
            console.log('no action required');
            return {
                add: false,
                index: -1,
            };
        }
    }

    obj['add'] = function(day, month, year, index){
        let date = `${month}/${day}/${year}`;
        let dateObj = {
            date,
            'highlight' : true,
        }
        this.dateArr.splice(index, 0, dateObj);
        console.table(this.dateArr);
    }

    obj['remove'] = function(index){ 
        console.table(this.dateArr);
        this.dateArr.splice(index, 1);
        console.table(this.dateArr);
    }

    return obj;
}